{"version":3,"sources":["../../src/app.js"],"names":[],"mappings":";;;;AAIA;;AAEA;;;;AAEA;;;;AACA;;;;AAGA;;AAEA;;AACA;;AACA;;AAEA;;AACA;;AACA;;;;;AAGA,IAAI,WAAW,QAAQ,UAAR,CAAf;;;;AACA,SAAS,OAAT,CAAiB,iBAAO,EAAP,CAAU,OAAV,CAAkB,MAAnC;;;AAGA,IAAI,SAAS,oBAAb;;;AAGA,IAAI,gBAAgB,QAAQ,2BAAR,CAApB;AACA,IAAI,gBAAgB,4BAAkB,aAAlB,EAAgC,MAAhC,CAApB;AACA,IAAI,kBAAkB,+BAAoB,aAApB,EAAkC,MAAlC,CAAtB;AACA,IAAI,iBAAiB,mCAAmB,eAAnB,EAAoC,MAApC,CAArB;;;AAGA,IAAI,aAAa,QAAQ,wBAAR,CAAjB;AACA,IAAI,aAAa,sBAAe,UAAf,EAA0B,MAA1B,CAAjB;AACA,IAAI,eAAe,yBAAiB,UAAjB,EAA4B,MAA5B,CAAnB;AACA,IAAI,cAAc,6BAAgB,YAAhB,EAA8B,MAA9B,CAAlB;;AAEA,IAAI,eAAJ;;AAEA,IAAI,iBAAO,MAAP,CAAc,UAAlB,EAA8B;AAC1B,aAAS,kBAAQ,YAAR,CAAqB;AAC1B,qBAAa,aAAG,YAAH,CAAgB,gCAAhB,CADa;AAE1B,aAAK,aAAG,YAAH,CAAgB,2BAAhB,CAFqB;AAG1B,cAAM;AAHoB,KAArB,CAAT;AAKH,CAND,MAMO;AACH,aAAS,kBAAQ,YAAR,EAAT;AACH;;AAED,OACK,GADL,CACS,kBAAQ,WAAR,EADT,EAEK,GAFL,CAES,kBAAQ,YAAR,EAFT,EAGK,GAHL,CAGS,kBAAQ,UAAR,EAHT;;;AAMA,OAAO,GAAP,CAAW,UAAU,GAAV,EAAe,GAAf,EAAoB,IAApB,EAA0B;AACjC,QAAI,IAAI,OAAJ,CAAY,QAAZ,KAAyB,gBAAzB,IAA6C,IAAI,OAAJ,CAAY,QAAZ,KAAyB,sCAA1E,EAAkH;AAC9G;AACH,KAFD,MAGK;AACD,YAAI,IAAJ,CAAS,EAAC,SAAU,CAAX,EAAc,SAAU,8BAAxB,EAAwD,MAAO,EAA/D,EAAmE,OAAO,CAA1E,EAAT;AACH;AACJ,CAPD;;;AAUA,OAAO,GAAP,CAAW,YAAX,EAAyB,YAAY,GAAZ,EAAzB;AACA,OAAO,GAAP,CAAW,gBAAX,EAA6B,YAAY,OAAZ,EAA7B;;;AAGA,OAAO,GAAP,CAAW,eAAX,EAA4B,eAAe,GAAf,EAA5B;AACA,OAAO,GAAP,CAAW,mBAAX,EAAgC,eAAe,OAAf,EAAhC;AACA,OAAO,GAAP,CAAW,0BAAX,EAAuC,eAAe,oBAAf,EAAvC;;;AAGA,OAAO,MAAP,CAAc,iBAAO,MAAP,CAAc,IAA5B,EAAkC,YAAM;AACpC,WAAO,IAAP,CAAY,2BAA2B,iBAAO,MAAP,CAAc,IAArD;AACH,CAFD","file":"app.js","sourcesContent":["/**\n * app\n */\n\n\"use strict\";\n\nimport config from \"./config.json\";\n\nimport restify from \"restify\";\nimport fs from \"fs\";\n\n/* Files */\nimport {Logger} from \"./lib/logger\";\n\nimport {CustomerStore} from \"./stores/customer\";\nimport {CustomerRoutes} from \"./routes/customerRoutes\";\nimport {CustomerService} from \"./services/customer\";\n\nimport {OrderStore} from \"./stores/order\";\nimport {OrderRoutes} from \"./routes/orderRoutes\";\nimport {OrderService} from \"./services/order\";\n\n// Mongoose connection\nvar mongoose = require(\"mongoose\");\nmongoose.connect(config.db.mongodb.string);\n\n// Logger\nlet logger = new Logger();\n\n// Order\nlet CustomerModel = require(\"./resources/customerModel\");\nlet customerStore = new CustomerStore(CustomerModel,logger);\nlet customerService = new CustomerService(customerStore,logger);\nlet customerRoutes = new CustomerRoutes(customerService, logger);\n\n// Customer\nlet OrderModel = require(\"./resources/orderModel\");\nlet orderStore = new OrderStore(OrderModel,logger);\nlet orderService = new OrderService(orderStore,logger);\nlet orderRoutes = new OrderRoutes(orderService, logger);\n\nlet server;\n/* Create the server instance */\nif (config.server.production) {\n    server = restify.createServer({\n        certificate: fs.readFileSync(\"/keys/live/ssl_certificate.crt\"),\n        key: fs.readFileSync(\"/keys/live/api2016srv.key\"),\n        name: \"Cromwell Reporting Api\"\n    });\n} else {\n    server = restify.createServer();\n}\n\nserver\n    .use(restify.queryParser())\n    .use(restify.gzipResponse())\n    .use(restify.bodyParser());\n\n/* Check for Token */\nserver.pre(function (req, res, next) {\n    if (req.headers.username === \"cromwell-admin\" && req.headers.password === \"62079c94-ef3e-11e5-9ce9-5e5517507c66\") {\n        next();\n    }\n    else {\n        res.send({success : 0, message : \"Invalid username or password\", data : {}, retry: 1});\n    }\n});\n\n// Orders\nserver.get(\"/v1/orders\", orderRoutes.get());\nserver.get(\"/v1/orders/:id\", orderRoutes.getById());\n\n// Customers\nserver.get(\"/v1/customers\", customerRoutes.get());\nserver.get(\"/v1/customers/:id\", customerRoutes.getById());\nserver.get(\"/v1/customers/merlin/:id\", customerRoutes.getByMerlinAccountNo());\n\n/* Start up the server */\nserver.listen(config.server.port, () => {\n    logger.info(\"System Listen on port \" + config.server.port);\n});\n"]}