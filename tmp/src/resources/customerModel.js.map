{"version":3,"sources":["../../../src/resources/customerModel.js"],"names":[],"mappings":";;AAAA,IAAI,WAAW,QAAQ,UAAR,CAAf;;AAEA,IAAI,gBAAgB,SAAS,MAAT,CAAgB;AAChC,WAAO,SAAS,MAAT,CAAgB,KAAhB,CAAsB,KADG;AAEhC,uBAAmB,MAFa;AAGhC,aAAS,MAHuB;AAIhC,mBAAe,MAJiB;AAKhC,iBAAa,MALmB;AAMhC,gBAAY,MANoB;AAOhC,oBAAgB,MAPgB;AAQhC,oBAAgB,MARgB;AAShC,YAAQ,MATwB;AAUhC,aAAS,MAVuB;AAWhC,kBAAc,MAXkB;AAYhC,mBAAe,MAZiB,E;AAahC,0BAAsB,MAbU;AAchC,gCAA4B,EAAC,MAAM,OAAP,EAAgB,SAAS,CAAzB,EAdI;AAehC,+BAA2B,EAAC,MAAM,OAAP,EAAgB,SAAS,CAAzB;AAfK,CAAhB,CAApB;;AAkBA,IAAI,aAAa,SAAS,MAAT,CAAgB;AACzB,sBAAkB,MADO;AAEzB,WAAO,EAAC,MAAM,MAAP,EAAe,UAAS,IAAxB,EAFkB;AAGzB,gBAAY,EAAC,MAAM,MAAP,EAAe,UAAS,IAAxB,EAA+B,QAAQ,IAAvC,EAHa;AAIzB,qBAAiB,EAAC,MAAM,MAAP,EAJQ;AAKzB,eAAW,EAAC,MAAM,MAAP,EAAe,UAAS,IAAxB,EALc;AAMzB,cAAU,EAAC,MAAM,MAAP,EAAe,UAAS,IAAxB,EANe;AAOzB,qBAAiB,EAAC,MAAM,OAAP,EAAgB,SAAS,CAAzB,EAPQ;AAQzB,WAAO,EAAC,MAAM,MAAP,EAAe,QAAQ,IAAvB,EAA6B,UAAS,IAAtC,EAA4C,OAAO,IAAnD,EARkB;AASzB,cAAU,EAAC,MAAM,MAAP,EAAe,UAAS,IAAxB,EATe;AAUzB,WAAO,KAVkB;AAWzB,UAAO,EAAC,MAAM,MAAP,EAAe,UAAS,IAAxB,EAXkB;AAYzB,eAAW,MAZc;AAazB,yBAAqB,MAbI;AAczB,mBAAe,EAAC,MAAM,OAAP,EAAgB,SAAS,CAAzB,EAdU;AAezB,iBAAa,MAfY;AAgBzB,eAAW,MAhBc;AAiBzB,sBAAkB,MAjBO;AAkBzB,oBAAgB,MAlBS;AAmBzB,aAAS,EAAC,MAAM,OAAP,EAAgB,SAAS,CAAzB,EAnBgB;AAoBzB,oBAAgB,EAAC,MAAM,OAAP,EAAgB,SAAS,CAAzB,EApBS;AAqBzB,eAAe,EAAC,MAAM,IAAP,EArBU;AAsBzB,sBAAmB;AACf,0BAAmB,EAAC,MAAM,OAAP,EAAgB,SAAS,CAAzB,EADJ;AAEf,wBAAiB,EAAC,MAAM,OAAP,EAAgB,SAAS,CAAzB;AAFF,KAtBM;AA0BzB,eAAY,EAAC,MAAM,IAAP,EA1Ba;AA2BzB,gBAAY;AACR,kBAAU,KADF;AAER,oBAAY;AAFJ,KA3Ba;AA+BzB,oBAAgB;AACZ,eAAO,MADK;AAEZ,oBAAY,IAFA;AAGZ,qBAAa,EAAC,MAAM,OAAP,EAAgB,SAAS,CAAzB;AAHD,KA/BS;AAoCzB,eAAW,CAAC,aAAD;AApCc,CAAhB,CAAjB;AAuCA,OAAO,OAAP,GAAiB,SAAS,KAAT,CAAe,OAAf,EAAwB,UAAxB,CAAjB","file":"customerModel.js","sourcesContent":["var mongoose = require(\"mongoose\");\n\nlet addressSchema = mongoose.Schema({\n    \"_id\": mongoose.Schema.Types.Mixed,\n    \"addressNickName\": String,\n    \"title\": String,\n    \"companyName\": String,\n    \"firstName\": String,\n    \"lastName\": String,\n    \"addressLine1\": String,\n    \"addressLine2\": String,\n    \"city\": String,\n    \"state\": String,\n    \"postalCode\": String,\n    \"countryCode\": String, //default to UK\n    \"addressPhoneNumber\": String,\n    \"isDefaultShippingAddress\": {type: Boolean, default: 0},\n    \"isDefaultBillingAddress\": {type: Boolean, default: 0}\n});\n\nlet userSchema = mongoose.Schema({\n        merlinCustomerId: String,\n        title: {type: String, required:true},\n        customerId: {type: String, required:true , unique: true},\n        merlinAccountNo: {type: String},\n        firstName: {type: String, required:true},\n        lastName: {type: String, required:true},\n        allowPromotions: {type: Boolean, default: 0},\n        email: {type: String, unique: true, required:true, index: true},\n        password: {type: String, required:true},\n        roles: Array,\n        salt:  {type: String, required:true},\n        telephone: String,\n        additionalTelephone: String,\n        vatRegistered: {type: Boolean, default: 0},\n        companyName: String,\n        vatNumber: String,\n        securityQuestion: String,\n        securityAnswer: String,\n        deleted: {type: Boolean, default: 0},\n        userConversion: {type: Boolean, default: 1},\n        createdAt    : {type: Date},\n        \"internalStatus\" : {\n            userRegistration : {type: Boolean, default: 1},\n            updatePassword : {type: Boolean, default: 0}\n        },\n        updatedAt : {type: Date},\n        favourites: {\n            products: Array,\n            categories: Array\n        },\n        forgotPassword: {\n            token: String,\n            expiryDate: Date,\n            sendMessage: {type: Boolean, default: 0}\n        },\n        addresses: [addressSchema]\n    }\n);\nmodule.exports = mongoose.model(\"users\", userSchema);\n"]}