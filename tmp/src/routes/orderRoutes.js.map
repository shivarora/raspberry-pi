{"version":3,"sources":["../../../src/routes/orderRoutes.js"],"names":[],"mappings":";;;;AAIA;;;;;;;;;;;;;;;;IAYa,W,WAAA,W;AAET,yBAAa,YAAb,EAA2B,MAA3B,EAAmC;AAAA;;AAC/B,aAAK,aAAL,GAAqB,YAArB;AACA,aAAK,OAAL,GAAe,MAAf;AACH;;;;8BAEM;AAAA;;AACH,mBAAO,CACH,UAAC,GAAD,EAAM,GAAN,EAAc;;AAEV,uBAAO,MAAK,aAAL,CAAmB,GAAnB,CAAuB,IAAI,KAA3B,EACF,IADE,CACG,kBAAU;;AAEZ,wBAAI,IAAJ,CAAS,EAAC,SAAU,CAAX,EAAc,SAAU,WAAxB,EAAqC,MAAO,MAA5C,EAAoD,OAAO,CAA3D,EAAT;AAEH,iBALE,EAMF,KANE,CAMI,eAAO;AACV,wBAAI,IAAJ,CAAS,EAAC,SAAU,CAAX,EAAc,SAAU,aAAa,IAAI,OAAzC,EAAkD,MAAO,EAAzD,EAA6D,OAAO,CAApE,EAAT;AACH,iBARE,CAAP;AASH,aAZE,CAAP;AAcH;;;kCAEU;AAAA;;AACP,mBAAO,CACH,UAAC,GAAD,EAAM,GAAN,EAAc;;AAEV,uBAAO,OAAK,aAAL,CAAmB,OAAnB,CAA2B,IAAI,MAAJ,CAAW,EAAtC,EACF,IADE,CACG,kBAAU;;AAEZ,wBAAI,IAAJ,CAAS,EAAC,SAAU,CAAX,EAAc,SAAU,WAAxB,EAAqC,MAAO,MAA5C,EAAoD,OAAO,CAA3D,EAAT;AAEH,iBALE,EAMF,KANE,CAMI,eAAO;AACV,wBAAI,IAAJ,CAAS,EAAC,SAAU,CAAX,EAAc,SAAU,aAAa,IAAI,OAAzC,EAAkD,MAAO,EAAzD,EAA6D,OAAO,CAApE,EAAT;AACH,iBARE,CAAP;AASH,aAZE,CAAP;AAcH","file":"orderRoutes.js","sourcesContent":["/**\n * index\n */\n\n\"use strict\";\n\n\n/* Node modules */\n\n\n/* Third-party modules */\n\n\n/* Files */\n\n\nexport class OrderRoutes {\n\n    constructor (orderService, logger) {\n        this._orderService = orderService;\n        this._logger = logger;\n    }\n\n    get () {\n        return [\n            (req, res) => {\n\n                return this._orderService.get(req.query)\n                    .then(result => {\n\n                        res.send({success : 1, message : \"completed\", data : result, retry: 0});\n\n                    })\n                    .catch(err => {\n                        res.send({success : 0, message : \" Error! \" + err.message, data : {}, retry: 1});\n                    });\n            }\n        ];\n    }\n\n    getById () {\n        return [\n            (req, res) => {\n\n                return this._orderService.getById(req.params.id)\n                    .then(result => {\n\n                        res.send({success : 1, message : \"completed\", data : result, retry: 0});\n\n                    })\n                    .catch(err => {\n                        res.send({success : 0, message : \" Error! \" + err.message, data : {}, retry: 1});\n                    });\n            }\n        ];\n    }\n\n}\n"]}